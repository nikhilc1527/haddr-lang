import "std.haddr";

proc nextPermutation(array: *i64, arrlen: i64) -> () {
    let i: i64 = arrlen - 1;
    while (i > 0 && array[i - 1] >= array[i])
        i = i - 1;
    
    if (i > 0) {
      let j: i64 = arrlen - 1;
      while (array[j] <= array[i - 1])
          j = j - 1;
      
      let temp: i64 = array[i - 1];
      array[i - 1] = array[j];
      array[j] = temp;
      
      j = arrlen - 1;
      while (i < j) {
          temp = array[i];
          array[i] = array[j];
          array[j] = temp;
          i = i + 1;
          j = j - 1;
      }
      
    }
}

proc main() -> () {
  let perm: [i64; 10] = 0;
  for (let i: i8 = 0; i < 10; i = i + 1) {
    perm[i] = i;
  }
  for (let i: i8 = 0; i < 10; i = i + 1) {
    putch(perm[i] + '0');
  }
  putch(10);
  for (let i: i64 = 0; i < 1000000-1; i = i + 1) {
    nextPermutation(perm, 10);
    for (let j: i8 = 0; j < 10; j = j + 1) {
      putch(perm[j] + '0');
    }
    putch(10);
  }
}