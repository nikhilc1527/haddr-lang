func puti num do
   if num < 0 do
      . 45;
      num = 0 - num;
   else end;
   if num do
      dig_len = 2;
      digits = [dig_len];
      i = 0;
      while num > 0 do
         if i > dig_len-1 do
            new_dig_len = dig_len * 2;
            new_arr = [dig_len * 2];
            j = 0;
            while j < dig_len do
               new_arr[j] = digits[j];
               j = j + 1;
            end;
            digits = new_arr;
            dig_len = new_dig_len;
         else end;
         
         digits[i] = num % 10;
         num = num / 10;
         i = i + 1;
      end;
      i = i - 1;
      while i > 0-1 do
         . digits[i] + 48;
         i = i - 1;
      end;
   else . 48; end;
end;

LIMIT = 1000;

N = 1;
not_done = 1;
while N < 1000 && not_done do
   sum = 0;
   M = N + 1;
   a = 0;
   b = 0;
   c = 0;
   while sum < 1000 do
      a = M*M - N*N;
      b = 2 * M * N;
      c = M*M + N*N;
      sum = a + b + c;
      M = M + 1;
   end;
   if sum - 1000 do else
      puti(a * b * c); . 10;
      not_done = 0;
   end;
   N = N + 1;
end;
