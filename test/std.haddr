import "linux.haddr";

proc strlen(str: *i8) -> i64 {
  let pointer: *i8 = str;
  let len: i64 = 0;
  while (pointer[0] > 0) {
    pointer = pointer + 1;
    len = len + 1;
  }
  return len;
}

proc my_puts(str: *i8) -> () {
  let len: i64 = strlen(str);
  syscall3(SYS_write, stdout, str, len);
}

proc my_putch(c: i8) -> () {
  syscall3(SYS_write, stdout, &c, 1);
}

proc std_printi(num: i64) -> () {
  if (num == 0) {
    my_putch('0');
  } else {
    let num_buffer: [i8; 23] = 0;
    let i: i64 = 22;
    let negative: i8 = 0;
    if (num < 0) {
      negative = 1;
      num = 0-num;
    }

    while (num > 0) {
      num_buffer[i] = num % 10 + '0';
      num = num / 10;
      i = i - 1;
    }
    if (negative > 0) {
      num_buffer[i] = '-';
      i = i - 1;
    }

    syscall3(SYS_write, stdout, &(num_buffer[i]), 23 - i);
  }
  my_putch(10);
}
