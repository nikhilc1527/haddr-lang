import "std.haddr";

const GRID_SIZE: i64 = 200;
const INPUT_SIZE: i64 = 8192;

proc main(argv: **i8) -> () {
  let filename: *i8 = argv[1];
  if (filename == 0) {
    puts("i need a file to read from!!!");
    putch(10);
    exit(1);
  }
  let fd: i64 = open(filename, O_RDONLY);
  if (fd <= 0) {
    puts("could not open file: ");
    puts(filename);
    putch(10);
    exit(1);
  }

  let grid: [[i8; 2*GRID_SIZE+1]; 2*GRID_SIZE+1] = 0;
  let x: i64 = GRID_SIZE;
  let y: i64 = GRID_SIZE;
  let str: [i8; INPUT_SIZE] = 0;
  let len: i64 = read(fd, str, INPUT_SIZE);
  grid[x][y] = 1;
  let visited: i64 = 1;

  for (let i: i64 = 0; i < len; i = i + 1) {
    // puti(x);
    // puts(", ");
    // puti(y);
    // putch(10);
    
    if (str[i] == '>') x = x + 1;
    else if (str[i] == '<') x = x - 1;
    else if (str[i] == '^') y = y - 1;
    else if (str[i] == 'v') y = y + 1;

    if (x < 0 || x >= GRID_SIZE * 2 + 1) {
      puts("x overflowed bounds");
      putch(10);
      exit(1);
    }
    if (y < 0 || y >= GRID_SIZE * 2 + 1) {
      puts("y overflowed bounds");
      putch(10);
      exit(1);
    }

    if (grid[x][y] == 0) {
      grid[x][y] = 1;
      visited = visited + 1;
    }
  }
  printi(visited);
}